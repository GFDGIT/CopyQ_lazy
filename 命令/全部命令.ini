[Commands]
1\Name=\x641c\x7d22\x6240\x6709\x6807\x7b7e\x9875
1\Command="
    copyq:
    // \x9ed8\x8ba4\x5feb\x6377\x952e\x4e0eWin10\x81ea\x5e26\x8f93\x5165\x6cd5\x7684\x7b80\x7e41\x5207\x6362\x5feb\x6377\x952e\x51b2\x7a81\xff0c\x8bf7\x81ea\x884c\x8c03\x6574
    // Name for tab for storing matching items.
    var search_tab_name = \"\x5168\x5c40\x641c\x7d22\"
    // Returns true if item at index matches regex.
    function item_matches(item_index, re)
    {
        var item = getitem(j)
        var note = str(item[mimeItemNotes])
        var text = str(item[mimeText])
        return text && (re.test(text) || re.test(note))
    }
    // Ask for search expression.
    var match = dialog(\"\x641c\x7d22\")
    if (!match)
      abort()
    var re = new RegExp(match,'i') // 'i' case-insensitive
    // Clear tab with results.
    try {
      removeTab(search_tab_name)
    } catch (e) {}
    // Search all tabs.
    var tab_names = tab()
    for (var i in tab_names) {
      var tab_name = tab_names[i]
      tab(tab_name)
      var item_count = count()
      // Search all items in tab.
      for (var j = 0; j < item_count; ++j) {
        // Add matching item to tab with results.
        if (item_matches(j, re)) {
          var item = getItem(j)
          tab(search_tab_name)
          setItem(j, item)
          tab(tab_name)
        }
      }
    }
    show(search_tab_name)"
1\InMenu=true
1\Icon=\xf002
1\Shortcut=ctrl+shift+f
2\Name=\x7b5b\x9009
2\Command="
    copyq:
    var image = {
        [mimeText]: '\x56fe\x7247',
        [mimeIcon]: '\xf302',
        filter: '(^image/.*)|(?=^file\\:.*\\.(png|jpe?g|bmp|svg|gif)$)',
        shortcut: 'i'
    }

    var file = {
        [mimeText]: '\x6587\x4ef6',
        [mimeIcon]: '\xf15b',
        filter: '(?=^file://)',
        shortcut: ''
    }

    var url = {
        [mimeText]: 'URL',
        [mimeIcon]: '\xf0c1',
        filter: '^(?=(https?|ftps?|smb|mailto)://)',
        shortcut: 'u'
    }

    var html = {
        [mimeText]: 'HTML',
        [mimeIcon]: '\xf121',
        filter: '^text/html$',
        shortcut: 'h'
    }

    var PhoneMail = {
        [mimeText]: '\x624b\x673a\x53f7/\x90ae\x7bb1',
        [mimeIcon]: '\xe527',
        filter: '(^0{0,1}(13[0-9]|15[7-9]|153|156|18[7-9])[0-9]{8}$)|(^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$)',
        shortcut: 'p'
    }

    var filters = [image, file, url, html, PhoneMail]
    var selectedFilter = ''
    var shortcut = str(data(mimeShortcut))

    if (shortcut) {
        for (let f in filters) {
            if (filters[f].shortcut === shortcut) {
                selectedFilter = filters[f].filter
                filter_x(selectedFilter)
                abort()
           }
        }
    }

    var selectedIndex = menuItems(filters)

    if (selectedIndex != -1) {
        selectedFilter = filters[selectedIndex].filter
        filter_x(selectedFilter)
    } else {
        filter('')
    }

    function filter_x(filter_) {
        if (filter() == filter_)
            filter('')
        else
            filter('') & filter(filter_)
    }"
2\InMenu=true
2\Icon=\xf0b0
2\Shortcut=f, i, u
3\Name=\x6392\x5e8f
3\Command="
    copyq:
    // \x5355\x9009\x6761\x76ee\x65f6\x5bf9\x6574\x4e2a\x6807\x7b7e\x9875\x8fdb\x884c\x6392\x5e8f
    // \x591a\x9009\x6761\x76ee\x65f6\x5bf9\x9009\x4e2d\x7684\x6761\x76ee\x8fdb\x884c\x6392\x5e8f
    var date = {
        [mimeText]: '\x6700\x65e7\x5728\x524d',
        [mimeIcon]: '\xf017',
        format: \"application/x-copyq-user-copy-time\",
        reverse: false
    }
    var date_reverse = {
        [mimeText]: '\x6700\x65b0\x5728\x524d',
        [mimeIcon]: '\xf1da',
        format: \"application/x-copyq-user-copy-time\",
        reverse: true
    }
    var alphabet = {
        [mimeText]: '\x5b57\x6bcd\x987a\x5e8f',
        [mimeIcon]: '\xf15d',
        format: mimeText,
        reverse: false
    }
    var alphabet_reverse = {
        [mimeText]: '\x5b57\x6bcd\x5012\x5e8f',
        [mimeIcon]: '\xf881',
        format: mimeText,
        reverse: true
    }

    var size_reverse = {
        [mimeText]: '\x4ece\x5927\x5230\x5c0f',
        [mimeIcon]: '\xf160',
        format: \"ItemSize\",
        reverse: true
    }

    var size = {
        [mimeText]: '\x4ece\x5c0f\x5230\x5927',
        [mimeIcon]: '\xf884',
        format: \"ItemSize\",
        reverse: false
    }

    var sel = ItemSelection().current()
    if (sel.length <= 1) {
        sel = ItemSelection().selectAll()
    }

    var sorts = [date_reverse, date, alphabet, alphabet_reverse, size_reverse, size]
    var selectedIndex = menuItems(sorts)
    var texts = ''
    if (selectedIndex != -1) {
        var selectedFormat = sorts[selectedIndex].format
        if (selectedFormat == 'ItemSize') {
            var rows = sel.rows()
            popup('\x6392\x5e8f\x4e2d\x23f3','',rows.length*3)
            texts = Sizelist()
        } else {
            texts = sel.itemsFormat(selectedFormat)
        }
    } else {
        abort()
    }

    sel.sort(function (i, j) {
        if (sorts[selectedIndex].reverse) {
            return texts[i] > texts[j];
        } else {
            return texts[i] < texts[j];
        }
    });
    popup('\x6392\x5e8f\x5b8c\x6210\x2705','',1000)

    function Sizelist() {
        var items = sel.items()
        var sizes = []
        for (let row in rows) {
            var itemSize = 0
            var item = items[row]
            for (var format in item) {
                itemSize += read(format, row).size()
            }
            sizes.push(itemSize)
        }
        return sizes
    }"
3\InMenu=true
3\Icon=\xf0dc
3\Shortcut=s
4\Name=----------------------------------
4\Command="
    copyq:
    // \x865a\x62df\x5206\x5272\x7ebf


    \r"
4\InMenu=true
5\Name=\x53e6\x5b58\x4e3a
5\Command="
    copyq:
    var defaultPath = Dir().homePath()
    var customPath = '/Desktop'
    var suffices = {
      'image/svg': 'svg',
      'image/png': 'png',
      'image/jpeg': 'jpg',
      'image/jpg': 'jpg',
      'image/bmp': 'bmp',
      'text/html': 'html',
      'text/plain' : 'txt',
    }

    if (customPath) {
        currentpath(customPath)
    }
    else {
        currentpath(defaultPath)
    }

    function hasSuffix(fileName)
    {
      return /\\.[0-9a-zA-z]+$/.test(fileName);
    }
    function addSuffix(fileName, format)
    {
      var suffix = suffices[format]
      return suffix ? fileName + \".\" + suffix : fileName
    }
    function filterFormats(format)
    {
      return /^[a-z]/.test(format) && !/^application\\/x/.test(format)
    }
    function itemFormats(row)
    {
      return str(read('?', row))
        .split('\\n')
        .filter(filterFormats)
    }
    function formatPriority(format)
    {
      var k = Object.keys(suffices);
      var i = k.indexOf(format);
      return i === -1 ? k.length : i
    }
    function reorderFormats(formats)
    {
      formats.sort(function(lhs, rhs){
        var i = formatPriority(lhs);
        var j = formatPriority(rhs);
        return i === j ? lhs.localeCompare(rhs) : i - j;
      })
    }
    if (selectedtab()) tab(selectedtab())
    var row = selectedtab() ? currentitem() : -1
    var formats = itemFormats(row)
    reorderFormats(formats)
    var defaultFileName = dateString('yyyy-MM-dd ')+'\x672a\x547d\x540d'
    var keyFormat = '\x683c\x5f0f'
    var keyFileName = '\x6587\x4ef6\x540d'
    var defaultFormat = formats[0]
    var result = dialog(
      '.title', '\x53e6\x5b58\x4e3a...',
      '.width', 300,
      keyFormat, [defaultFormat].concat(formats),
      keyFileName, File(defaultFileName)
    ) || abort()
    var fileName = result[keyFileName]
    var format = result[keyFormat]
    if (!format || !fileName)
      abort()
    if (!hasSuffix(fileName))
      fileName = addSuffix(fileName, format)
    var f = File(fileName)
    if (!f.open()) {
      popup('\x6253\x5f00\x5931\x8d25 \"' + f.fileName() + '\"', f.errorString())
      abort()
    }
    f.write(selectedtab() ? getitem(currentitem())[format] : clipboard(format))
    popup(\"\x4fdd\x5b58\x6210\x529f\", '\x6761\x76ee\x5df2\x4fdd\x5b58\x4e3a \"' + f.fileName() + '\".')"
5\InMenu=true
5\Shortcut=ctrl+s
6\Name=\x64a4\x9500\x5220\x9664
6\MatchCommand="
    copyq:
    var trash_tab = '\x56de\x6536\x7ad9'
    if (selectedTab() == trash_tab) {
        menuItem['text'] = '\x6062\x590d\x9009\x4e2d\x6761\x76ee'
    } else {
        menuItem['text'] = '\x64a4\x9500\x4e0a\x4e00\x6b21\x5220\x9664'
    }"
6\Command="
    copyq:
    // \x5f53\x539f\x59cb\x6807\x7b7e\x9875\x4e0d\x5b58\x5728\x65f6\xff0c\x56de\x9000\x4f7f\x7528\x7684\x6807\x7b7e\x9875
    var fallback_tab = '\x526a\x8d34\x677f'

    // True\xff1a\x5c06\x6761\x76ee\x6062\x590d\x5230\x539f\x59cb\x4f4d\x7f6e
    // False\xff1a\x5c06\x6761\x76ee\x6062\x590d\x5230\x6807\x7b7e\x9875\x9876\x90e8
    // \x5728\x56de\x6536\x7ad9\x9009\x4e2d\x6761\x76ee\x8fdb\x884c\x6062\x590d\x65f6\xff0c\x6b64\x9879\x4e0d\x751f\x6548\xff0c\x603b\x662f\x6062\x590d\x5230\x9876\x90e8
    var restore_index = true

    var trash_tab = '\x56de\x6536\x7ad9'

    var tab_mime = 'application/x-copyq-user-tab'
    var index_mime = 'application/x-copyq-user-index'
    var time_mime = 'application/x-copyq-user-delete-time'
    var remove_mime = [tab_mime, index_mime, time_mime]

    tab(trash_tab)
    if (length() == 0) {
        popup('\x6ca1\x6709\x53ef\x64a4\x9500\x5220\x9664\x7684\x6761\x76ee\xff01')
        abort()
    }

    var target_index = 0
    var remove_items = []
    var select_items = []

    var trigger_tab = selectedTab()

    if (trigger_tab == trash_tab) {
        var tabs = []
        select_items = ItemSelection().current().items()
        remove_items = selectedItems()
        for (var i in select_items) {
            var item = select_items[i]

            var target_tab = item[tab_mime] || fallback_tab
            tabs.push(target_tab)
            for (var j in remove_mime)
                delete item[remove_mime[j]]
            tab(target_tab)
            insert(target_index, item)
        }
        var tabs_num = getRepeatNum(tabs)
        var tabs_str = ''
        for (var t in tabs_num) {
            tabs_str += t + '\xff1a' + tabs_num[t] + '\\n'
        }
        popup('\x5df2\x6062\x590d\x6761\x76ee(\x6807\x7b7e\x9875\xff1a\x6570\x91cf)\\n' + tabs_str, '', 3000)

    } else {
        var items = []

        tab(trash_tab)
        var item = getItem(0)
        var delete_time = item[time_mime]
        var target_tab = item[tab_mime] || selectedtab()
        for (let i = 0; i < length(); i++) {
            item = getitem(i)
            if (item[time_mime] == delete_time) {
                select_items.push(item[index_mime])
                for (var j in remove_mime)
                    delete item[remove_mime[j]]
                items.push(item)
                remove_items.push(i)
            }
        }

        show(target_tab)
        tab(target_tab)

        if (restore_index) {
            for (let i = 0; i < items.length; i++) {
                insert(select_items[i], items[i])
            }
        } else {
            select_items = []
            for (var j = 0; j < items.length; ++j) {
                select_items.push(target_index + j)
            }
            items.unshift(target_index)
            insert.apply(this, items)
        }

        selectItems.apply(this, select_items)

    }

    tab(trash_tab)
    remove.apply(this, remove_items)


    function getRepeatNum(arr) {
        var obj = {};
        for (var i = 0, l = arr.length; i < l; i++) {
            var item = arr[i];
            obj[item] = (obj[item] + 1) || 1;
        }
        return obj;
    }
    "
6\InMenu=true
6\Icon=\xf0e2
6\Shortcut=ctrl+z
7\Name=\x5220\x9664\x81f3\x56de\x6536\x7ad9
7\Command="
    copyq:
    var trash_tab = '\x56de\x6536\x7ad9'
    var tab_mime = 'application/x-copyq-user-tab'
    var index_mime = 'application/x-copyq-user-index'
    var time_mime = 'application/x-copyq-user-delete-time'

    var source_tab = selectedtab()
    var time = (new Date).toISOString()

    tab(source_tab)
    var sel = ItemSelection().current()
    var pinned = []
    const rows = sel.rows()
    if (rows.length === 0)
        abort()
    if (source_tab != trash_tab) {
        var trashed = []
        for (var i = 0; i < sel.length; ++i) {
            if (plugins.itempinned.isPinned(rows[i])) {
                pinned.push(i)
            }
            else {
                var item = sel.itemAtIndex(i)
                // Workaround: Convert QByteArray to ByteArray.
                for (var format in item)
                    item[format] = ByteArray(item[format])
                item[tab_mime] = source_tab
                item[index_mime] = rows[i]
                item[time_mime] = time
                trashed.push(item)
            }
        }
        if (pinned.length > 0) {
            sel.deselectIndexes(pinned)
            for (var i = 0; i < pinned.length; i++) {
              pinned[i] = pinned[i] + 1
            }
            popup('\x56fa\x5b9a\x7684\x6761\x76ee\x4e0d\x4f1a\x88ab\x5220\x9664  ', '\x9009\x62e9\x4e2d\x7684\x7b2c ' + pinned + ' \x6761\x5df2\x56fa\x5b9a\x3002', time = 2000)
        }
        tab(trash_tab)
        write(0, trashed)
        tab(source_tab)
        sel.removeAll()
    }
    else {
        var text = dialog(
            '.title', '\x786e\x8ba4\x5220\x9664\xff1f',
            '.label', '<font size=8>\x26a0\xfe0e</font><font size=4>&nbsp;\x65e0\x6cd5\x64a4\x9500\xff01',
            '.combo:\x786e\x8ba4 ', ['\x662f', '\x5426']
        )
        if (text == '\x662f') {
            sel.removeAll()
        }
    }

    var newCurrentRow = rows[0]
    if (newCurrentRow >= length())
        newCurrentRow = length() - 1
    selectItems(newCurrentRow)"
7\InMenu=true
7\Icon=\xf2ed
7\Shortcut=del
8\Name=\x6e05\x7406\x5f53\x524d\x6807\x7b7e\x9875
8\MatchCommand="
    copyq: tab(selectedTab()); if (size() == 0) fail()"
8\Command="
    copyq:
    var trash_tab = '\x56de\x6536\x7ad9'
    var tab_mime = 'application/x-copyq-user-tab'
    var index_mime = 'application/x-copyq-user-index'
    var time_mime = 'application/x-copyq-user-delete-time'

    var source_tab = selectedtab()
    var time = (new Date).toISOString()

    tab(source_tab)
    var sel = ItemSelection(selectedTab()).selectRemovable()
    var pinned = []
    const rows = sel.rows()
    if (rows.length === 0)
        abort()
    if (source_tab != trash_tab) {
        var trashed = []
        for (var i = 0; i < sel.length; ++i) {
            if (plugins.itempinned.isPinned(rows[i])) {
                pinned.push(i)
            }
            else {
                var item = sel.itemAtIndex(i)
                // Workaround: Convert QByteArray to ByteArray.
                for (var format in item)
                    item[format] = ByteArray(item[format])
                item[tab_mime] = source_tab
                item[index_mime] = rows[i]
                item[time_mime] = time
                trashed.push(item)
            }
        }
        if (pinned.length > 0) {
            sel.deselectIndexes(pinned)
            for (var i = 0; i < pinned.length; i++) {
              pinned[i] = pinned[i] + 1
            }
            popup('\x56fa\x5b9a\x7684\x6761\x76ee\x4e0d\x4f1a\x88ab\x5220\x9664  ', '\x7b2c ' + pinned + ' \x6761\x5df2\x56fa\x5b9a\x3002', time = 2000)
        }
        tab(trash_tab)
        write(0, trashed)
        tab(source_tab)
        sel.removeAll()
    }
    else {
        var text = dialog(
            '.title', '\x786e\x8ba4\x6e05\x7406\xff1f',
            '.label', '<font size=8>\x26a0\xfe0e</font><font size=4>&nbsp;\x65e0\x6cd5\x64a4\x9500\xff01',
            '.combo:\x786e\x8ba4 ', ['\x662f', '\x5426']
        )
        if (text == '\x662f') {
            ItemSelection(selectedTab()).selectRemovable().removeAll()
        }
    }

    var newCurrentRow = rows[0]
    if (newCurrentRow >= length())
        newCurrentRow = length() - 1
    selectItems(newCurrentRow)"
8\InMenu=true
8\Icon=\xf51a
9\Name=----------------------------------
9\Command="
    copyq:
    // \x865a\x62df\x5206\x5272\x7ebf

    \r"
9\InMenu=true
10\Name=\x56fa\x5b9a
10\Command="
    copyq: plugins.itempinned.pin()"
10\Input=!OUTPUT
10\Output=application/x-copyq-item-pinned
10\InMenu=true
10\Icon=\xf08d
10\Shortcut=shift+p
10\InternalId=copyq_pinned_pin
11\Name=\x89e3\x9664\x56fa\x5b9a
11\Command="
    copyq: plugins.itempinned.unpin()"
11\Input=application/x-copyq-item-pinned
11\InMenu=true
11\Icon=\xf08d
11\Shortcut=shift+p
11\InternalId=copyq_pinned_unpin
12\Name=\x5207\x6362\x9ad8\x4eae
12\MatchCommand="
    copyq:
    var color = 'rgba(255, 255, 0, 0.5)'
    var currentColor = str(selectedItemData(0)[mimeColor])
    if (currentColor != color) {
        menuItem['text'] = '\x9ad8\x4eae'
        menuItem['tag'] = '__'
        menuItem['color'] = color.replace(/\\d+\\.\\d+/, 1)
    } else {
        menuItem['text'] = '\x53d6\x6d88\x9ad8\x4eae'
        menuItem['tag'] = 'x'
        menuItem['color'] = 'white'
    }"
12\Command="
    copyq:
    var color = 'rgba(255, 255, 0, 0.5)'
    var currentColor = str(selectedItemData(0)[mimeColor]);
    if (currentColor != color) {
        setData(mimeColor, color)
    } else {
        removeData(mimeColor)
    }"
12\InMenu=true
12\Enable=false
12\Icon=\xf591
12\Shortcut=ctrl+m
13\Name=\x5207\x6362\x201c\x91cd\x8981\x201d\x6807\x8bb0
13\Command="
    copyq:
    var tag = decodeURIComponent('\x91cd\x8981')
    if (plugins.itemtags.hasTag(tag))
        plugins.itemtags.untag(tag)
    else
        plugins.itemtags.tag(tag)"
13\InMenu=true
13\Icon=\xf02e
14\Name=\x6807\x8bb0\x4e3a \x201c\x91cd\x8981\x201d
14\MatchCommand="
    copyq: plugins.itemtags.hasTag(decodeURIComponent('%E9%87%8D%E8%A6%81')) && fail()"
14\Command="
    copyq: plugins.itemtags.tag(decodeURIComponent('%E9%87%8D%E8%A6%81'))"
14\InMenu=true
14\Enable=false
14\Icon=\xf02b
14\InternalId=copyq_tags_tag:\x91cd\x8981
15\Name=\x79fb\x9664\x6807\x8bb0 \x201c\x91cd\x8981\x201d
15\MatchCommand="
    copyq: plugins.itemtags.hasTag(decodeURIComponent('%E9%87%8D%E8%A6%81')) || fail()"
15\Command="
    copyq: plugins.itemtags.untag(decodeURIComponent('%E9%87%8D%E8%A6%81'))"
15\InMenu=true
15\Enable=false
15\Icon=\xf02b
15\InternalId=copyq_tags_untag:\x91cd\x8981
16\Name=\x6dfb\x52a0\x4e00\x4e2a\x6807\x8bb0
16\Command="
    copyq: plugins.itemtags.tag()"
16\InMenu=true
16\Icon=\xf02b
16\Shortcut=shift+t
16\InternalId=copyq_tags_tag
17\Name=\x79fb\x9664\x4e00\x4e2a\x6807\x8bb0
17\Command="
    copyq: plugins.itemtags.untag()"
17\Input=application/x-copyq-tags
17\InMenu=true
17\Icon=\xf068
17\InternalId=copyq_tags_untag
18\Name=\x6e05\x7406\x6240\x6709\x6807\x8bb0
18\Command="
    copyq: plugins.itemtags.clearTags()"
18\Input=application/x-copyq-tags
18\InMenu=true
18\Icon=\xf02c
18\InternalId=copyq_tags_clear
19\Name=----------------------------------
19\Command="
    copyq:
    // \x865a\x62df\x5206\x5272\x7ebf

    \r"
19\InMenu=true
20\Name=\x7c98\x8d34\x4e3a\x7eaf\x6587\x672c
20\Command="
    copyq:
    var text = input()
    copy(text)
    copySelection(text)
    paste()"
20\Input=text/plain
20\InMenu=true
20\HideWindow=true
20\Icon=\xf0ea
20\Shortcut=shift+v
21\Name=\x6e05\x7406\x683c\x5f0f\x5e76\x7c98\x8d34
21\Command="
    copyq:

    var text = str(input())

    if (!text) {
      try {
        copy()
      } catch (e) {
        popup('\x590d\x5236\x5931\x8d25\xff0c\x8bf7\x91cd\x65b0\x9009\x62e9\x6587\x672c\xff01', e, time=2000)
        abort() 
      }
      text = str(clipboard())
    }

    copy(format(text))
    paste()

    function format(text) {
        //\x5168\x89d2\x8f6c\x534a\x89d2
        text = ToCDB(text).trim()
        // \x5220\x9664\x6240\x6709\x56de\x8f66\x6362\x884c\x7b26
        text = text.replace(new RegExp(/[\\r\\n]+/g), ' ')
        // \x4e24\x4e2a\x4ee5\x4e0a\x7684\x7a7a\x683c\x66ff\x6362\x6210\x4e00\x4e2a
        text = text.replace(new RegExp(/\\s+/g), ' ')
        // \x5220\x9664\x5355\x4e2a\x5b57\x6bcd\xff08\x41/a\x9664\x5916\xff09\x4e4b\x95f4\x7684\x7a7a\x683c
        text = text.replace(/([^Aa])\\s(?!\\S{2,}|A|a)/g,'$1')
        return text
    }

    function ToCDB(str) { 
        var tmp = \"\"
        for(var i=0;i<str.length;i++){ 
            if (str.charCodeAt(i) == 12288){
                tmp += String.fromCharCode(str.charCodeAt(i)-12256)
                continue
            }
            if(str.charCodeAt(i) > 65280 && str.charCodeAt(i) < 65375){ 
                tmp += String.fromCharCode(str.charCodeAt(i)-65248)
            } 
            else{ 
                tmp += String.fromCharCode(str.charCodeAt(i))
            } 
        } 
        return tmp 
    }"
21\Input=text/plain
21\InMenu=true
21\IsGlobalShortcut=true
21\HideWindow=true
21\Icon=\xf12d
21\GlobalShortcut=alt+shift+f
22\Name=\x5408\x5e76\x6240\x9009\x9879
22\Command="
    copyq add -- %1
    \r"
22\InMenu=true
23\Name=\x7528\x6d4f\x89c8\x5668\x6253\x5f00
23\Match="^(?=(https?|ftps?|smb|mailto)://)(?=\\S{12,})"
23\Command="
    copyq open %1\r"
23\InMenu=true
23\HideWindow=true
23\Icon=\xf0ac
23\Shortcut=ctrl+b
24\Name=----------------------------------
24\Command="
    copyq:
    // \x865a\x62df\x5206\x5272\x7ebf

    \r"
24\InMenu=true
25\Name=\x5207\x6362\x7f6e\x9876\x72b6\x6001
25\MatchCommand="
    copyq:
    var on = config(\"always_on_top\") === \"true\"
    if (on) {
      menuItem['text'] = '\x53d6\x6d88\x7f6e\x9876'
      menuItem['icon'] = '\xf023'
    } else {
      menuItem['text'] = '\x7f6e\x9876\x7a97\x53e3'
      menuItem['icon'] = '\xf3c1'
    }"
25\Command="
    copyq:
    var on = config(\"always_on_top\") === \"true\"

    config(\"always_on_top\", !on)
    config(\"activate_closes\",on)
    config(\"close_on_unfocus\",on)"
25\InMenu=true
25\Icon=\xf023
25\Shortcut=ctrl+`
26\Name=\x5207\x6362\x7b80\x6d01\x6a21\x5f0f
26\MatchCommand="
    copyq:
    var on = config(\"show_simple_items\") === \"true\"
    if (on) {
      menuItem['text'] = '\x666e\x901a\x6a21\x5f0f'
      menuItem['icon'] = '\xf065'
    } else {
      menuItem['text'] = '\x7b80\x6d01\x6a21\x5f0f'
      menuItem['icon'] = '\xf066'
    }"
26\Command="
    copyq:

    popup('\x6309 F8 \x5207\x6362\x7b80\x6d01/\x666e\x901a\x6a21\x5f0f','',2000)

    var row = selectedItems()

    var on = config(\"show_simple_items\") === \"true\"

    // \x4e0d\x8981\x968f\x610f\x8c03\x6574\x4e0b\x9762\x9009\x9879\x7684\x987a\x5e8f\xff0c\x53ef\x80fd\x5bfc\x81f4\x5207\x6362\x6a21\x5f0f\x65f6\x7a97\x53e3\x95ea\x70c1\x589e\x52a0

    // \x9690\x85cf\x6807\x7b7e\x680f
    config(\"hide_tabs\",!on)

    // \x9690\x85cf\x5de5\x5177\x680f
    config(\"hide_toolbar\",!on)

    // \x5355\x884c\x663e\x793a\xff0c\x4e0d\x80fd\x5173\x95ed\x6b64\x9879
    config(\"show_simple_items\", !on)

    // \x5207\x6362\x4e3b\x9898\xff08pure\x4e3b\x9898\x4f1a\x9690\x85cf\x83dc\x5355\x680f\xff0cmint\x5219\x4e0d\x4f1a\xff09
    !on? loadTheme(\"./config/copyq/themes/pure.ini\") : loadTheme(\"./config/copyq/themes/mint.ini\")

    // \x5931\x53bb\x7126\x70b9\x65f6\x4e0d\x5173\x95ed\x7a97\x53e3
    config(\"activate_closes\",on)
    config(\"close_on_unfocus\",on)

    // \x7f6e\x9876\x663e\x793a\xff0c\x5173\x95ed\x6b64\x9879\x53ef\x5927\x5e45\x51cf\x5c11\x7a97\x53e3\x95ea\x70c1
    config(\"always_on_top\",!on)

    selectItems(row)"
26\InMenu=true
26\Icon=\xf066
26\Shortcut=f8
27\Name=\x81ea\x52a8\x9884\x89c8\x56fe\x7247/\x957f\x6587\x672c
27\MatchCommand="
    copyq:
    if (visible()) {
        if (settings('AutoPreview') == 1) {

            if (selectedItems().length > 1)
                preview(false) & abort()

            // \x9884\x89c8\x56fe\x7247
            var preview_image = true
            // \x9884\x89c8\x957f\x6587\x672c\xff0c\x8c03\x6574\x5b57\x6570\x548c\x884c\x6570\x4ee5\x9002\x5e94\x9996\x9009\x9879\x4e2d\x6587\x672c\x7684\x6700\x5927\x9ad8\x5ea6
            var preview_longText = true
            // \x957f\x6587\x672c\x5b57\x6570
            var LongTextCharacters = 100
            // \x957f\x6587\x672c\x884c\x6570
            var LongTextLines = 2

            var format = str(dataFormats())
            var content = str(data(mimeUriList)) || str(data(mimeText))

            icon_on()

            if (condition()) {
                preview(true)
            } else {
                preview(false)
            }
        } else {
            icon_off()
        }
    }
    function condition() {
        return (
            preview_image && (format.match(/image\\/.*/) || content.match(/^file:.*(png|jpe?g|bmp|svg|gif)$/))
            ||
            preview_longText && (content.length > LongTextCharacters || countLines(content) > LongTextLines)
        )
    }

    function countLines(str) {
        var newLine = str.match(/\\n/g)
        return newLine ? newLine.length + 1 : 1
    }

    function icon_on() {
        menuItem['text'] = '\x5173\x95ed\x81ea\x52a8\x9884\x89c8'
        menuItem['icon'] = '\xf06e'
    }
    function icon_off() {
        menuItem['text'] = '\x6253\x5f00\x81ea\x52a8\x9884\x89c8'
        menuItem['icon'] = '\xf070'
    }"
27\Command="
    copyq:
    if (str(data(mimeShortcut))=='space') {
        preview(false) || preview(true)
        abort()
    }
    var row = selectedItems()

    if (settings('AutoPreview') == 1) {
        settings('AutoPreview', 0)
        popup('\x81ea\x52a8\x9884\x89c8\x274e','',1200)
    } else {
        settings('AutoPreview', 1)
        popup('\x81ea\x52a8\x9884\x89c8\x2705','',1200)
    }
    selectItems(row)"
27\InMenu=true
27\Icon=\xf06e
27\Shortcut=f7, space
28\Name=\x526a\x8d34\x677f\x7c98\x8d34\x4e3a\x7eaf\x6587\x672c
28\Command="
    copyq: 
    var text = clipboard()
    copy(text)
    copySelection(text)
    paste()"
28\IsGlobalShortcut=true
28\Icon=T
28\GlobalShortcut=ctrl+shift+v
28\InternalId=copyq_global_paste_clipboard_plain
29\Name=\x7c98\x8d34\x5e76\x590d\x5236\x4e0a\x4e00\x9879
29\Command="
    copyq: paste(); previous()"
29\IsGlobalShortcut=true
29\Icon=\xf0aa
29\GlobalShortcut=f9
29\InternalId=copyq_global_paste_copy_previous
30\Name=\x7c98\x8d34\x5e76\x590d\x5236\x4e0b\x4e00\x9879
30\Command="
    copyq: paste(); next()"
30\IsGlobalShortcut=true
30\Icon=\xf0ab
30\GlobalShortcut=f10
30\InternalId=copyq_global_paste_copy_next
31\Name=\x7c98\x8d34\x7b2cN\x9879
31\Command="
    copyq:
    var n = str(data(mimeShortcut)).slice(-1)
    select(n)
    paste()"
31\IsGlobalShortcut=true
31\Enable=false
31\Icon=\xf0cb
31\GlobalShortcut=ctrl+shift+0, ctrl+shift+1, ctrl+shift+2, ctrl+shift+3, ctrl+shift+4, ctrl+shift+5, ctrl+shift+6, ctrl+shift+7, ctrl+shift+8, ctrl+shift+9
32\Name=----------------------------------
32\Command="
    copyq:
    // \x865a\x62df\x5206\x5272\x7ebf
    \r"
32\InMenu=true
32\Enable=false
33\Name=\x7c98\x8d34\x5f53\x524d\x65e5\x671f\x548c\x65f6\x95f4
33\Command="
    copyq:
    var time = dateString('yyyy'+'\x5e74'+'MM'+'\x6708'+'dd'+'\x65e5 '+'hh:mm')
    copy(time)
    paste()"
33\IsGlobalShortcut=true
33\Icon=\xf017
33\GlobalShortcut=alt+shift+t
34\Name=\x5207\x6362 \x5927\x5199/\x5c0f\x5199/\x9996\x5b57\x6bcd\x5927\x5199
34\Command="
    copyq:
    try {
        copy()
    } catch (e) {
        popup('\x590d\x5236\x5931\x8d25\xff0c\x8bf7\x91cd\x65b0\x9009\x62e9\x6587\x672c\xff01', e)
        abort()
    }

    var text = str(clipboard())

    var UpperCase = text.toUpperCase()
    var LowerCase = text.toLowerCase()
    var TitleCase = toTitleCase(text)

    if (text == UpperCase) {
      text = LowerCase
    }
    else {
      if (text == LowerCase) {
        text = TitleCase
      }
      else
         text=UpperCase
    }

    copy(text)
    paste()

    function toTitleCase(str) {
      return str.replace(
        /\\w\\S*/g,
        function(txt) {
          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
        }
      );
    }"
34\IsGlobalShortcut=true
34\Icon=\xf034
34\GlobalShortcut=meta+ctrl+u
35\Name=\x663e\x793a/\x9690\x85cf\x4e3b\x7a97\x53e3
35\Command="
    copyq:
    // \x7559\x7a7a\x663e\x793a\x4e0a\x6b21\x6253\x5f00\x7684\x6807\x7b7e\x9875
    var tabName = '\x526a\x8d34\x677f'
    // \x5c45\x4e2d\x663e\x793a\x7a97\x53e3
    var center = true
    // \x5728\x9f20\x6807\x5149\x6807\x4e0b\x663e\x793a\x7a97\x53e3\xff0c\x5173\x95ed\x5c45\x4e2d\x65f6\x751f\x6548
    var showAtCursor = true
    // \x5c4f\x5e55\x5206\x8fa8\x7387
    var resolution = { w:1920, h:1080  }
    // \x7a97\x53e3\x5927\x5c0f\xff0c\x5c45\x4e2d\x7a97\x53e3\x65f6\x751f\x6548
    var windowSize = { w:300, h:400 }
    var windowPotion = { x:0, y:0 }

    // Qt\x7f29\x653e\x7cfb\x6570\xff08\x4f30\x7b97\x503c\xff09
    const Qt_Scale_Factor = 1.3
    // \x7cfb\x7edf\x7f29\x653e\x7cfb\x6570\xff0c\x31\x30\x30%=1.0\xff0c\x31\x32\x35%=1.25
    var sys_Scale_Factor = 1.25
    // \x7a97\x53e3\x7f29\x653e\x7cfb\x6570=Qt\x7f29\x653e*\x7cfb\x7edf\x7f29\x653e^2
    var scaleFactor = Qt_Scale_Factor * (sys_Scale_Factor * sys_Scale_Factor)

    if (visible()) {
        hide()
    }
    else {
      if (center) {
        windowPotion.x = Math.round( (resolution.w - windowSize.w * scaleFactor) / 2 )
        windowPotion.y = Math.round( (resolution.h - windowSize.h * scaleFactor) / 2 )
        showAt( windowPotion.x, windowPotion.y, windowSize.w, windowSize.h, tabName )
      }
      else {
         showAtCursor? showAt(): show()
      }
    }
        "
35\IsGlobalShortcut=true
35\Icon=\xf2d2
35\GlobalShortcut=alt+v
36\Name=----------------------------------
36\Command="
    copyq:
    // \x865a\x62df\x5206\x5272\x7ebf

    \r"
36\InMenu=true
36\Enable=false
37\Name=Linkify
37\Match=^(https?|ftps?|file|mailto|smb)://
37\Command="
    copyq:
    const link = str(input());
    const href = `<a href=\"${link}\">${link}</a>`;
    setData('text/html', href);"
37\Input=text/plain
37\Automatic=true
37\Icon=\xf0c1
38\Name=\x590d\x5236\x547d\x4ee4\x65f6\x901a\x77e5\x5bfc\x5165
38\Match=^\\[Commands?\\]|https?://github\\.com/.*/copyq-commands/blob/.*\\.ini
38\Command="
    copyq:
    // Imports raw commands code (starting with [Command] or [Commands])
    // or from a link ('https://github.com/**/copyq-commands/blob/**.ini').
    var timeOutSeconds = 10
    var rawDataUrlPrefix = 'https://raw.githubusercontent.com'
    // Don't run this when mouse selection changes.
    if ( dataFormats().indexOf(mimeClipboardMode) != -1 )
      abort()
    function importCommandsFromUrl(url)
    {
      var m = url.match(/^https?:\\/\\/github\\.com(\\/.*)\\/blob(\\/.*\\.ini)/)
      if (!m)
        return;
      var rawDataUrl = rawDataUrlPrefix + m[1] + m[2]
      var reply = networkGet(rawDataUrl)
      var commandsData = str(reply.data)
      if (reply.status != 200) {
        throw '\x547d\x4ee4\x83b7\x53d6\x5931\x8d25\xff01'
            + '\\nStatus code: ' + reply.status
            + '\\nError: ' + reply.error
      }
      if ( !commandsData.match(/^\\[Commands?\\]/) )
        return;
      return importCommands(commandsData);
    }
    var cmds = importCommandsFromUrl(str(input())) || importCommands(input())
    var list = '<ul>'
    for (var i in cmds) {
      var cmd = cmds[i]
      var cmdType =
        cmd.automatic ? 'automatic' :
        cmd.inMenu ? 'menu/shortcut' :
        cmd.globalShortcuts ? 'global shortcut' : '<b>???</b>';
      list += '<li>' + escapeHtml(cmds[i].name) + ' (' + cmdType + ')</li>'
    }
    list += '</ul>'
    var message = '<p>\x4ece\x526a\x8d34\x677f<b>\x5bfc\x5165</b>\x547d\x4ee4\xff1f</p>' + list
    notification(
      '.title', '\x6709\x53ef\x7528\x7684\x43opyQ\x547d\x4ee4',
      '.message', message,
      '.time', timeOutSeconds*1000,
      '.icon', '\xf085',
      '.id', 'CopyQ_commands_in_clipboard',
      '.button', '\x53d6\x6d88', '', '',
      '.button', '\x5bfc\x5165', 'copyq: addCommands( importCommands(input()) )', exportCommands(cmds)
    )"
38\Input=text/plain
38\Automatic=true
38\Icon=\xf085
39\Name=\x5ffd\x7565 *\"\x5bc6\x7801\"* \x7a97\x53e3
39\Window=KeePass(XC)?$
39\Command="
    copyq ignore
    "
39\Automatic=true
39\Remove=true
39\Icon=*
40\Name=\x4fdd\x5b58\x590d\x5236\x65f6\x95f4
40\Command="
    copyq:
    var time = dateString('yyyy-MM-dd hh:mm:ss')
    setData('application/x-copyq-user-copy-time', time)

    var tagsMime = 'application/x-copyq-tags'
    var tags = str(data(tagsMime)) + time
    setData(tagsMime, tags)"
40\Automatic=true
40\Icon=\xf017
41\Name=\x56fe\x7247\x6807\x7b7e\x9875
41\Command="
    copyq:
    var imageTab = '\x56fe\x7247'
    var formats = dataFormats()
    for (var i in formats) {
        if (formats[i].match(/^image\\//)) {
            setData(mimeOutputTab, imageTab)
            break
        }
    }"
41\Automatic=true
41\Enable=false
41\Icon=\xf03e
42\Name=\x5927\x6587\x4ef6\x6807\x7b7e\x9875
42\Command="
    copyq:
    var tabName = '\x5927\x6587\x4ef6'
    var minBytes = 250*1000
    function hasBigData() {
        var itemSize = 0
        var formats = dataFormats()
        for (var i in formats) {
            itemSize += data(formats[i]).size()
            if (itemSize >= minBytes)
                return true
        }
        return false
    }
    if (hasBigData()) {
        setData(mimeOutputTab, tabName)
    }"
42\Automatic=true
42\Enable=false
42\Icon=\xf1c0
43\Name=\x590d\x5236/\x7c98\x8d34\x6587\x4ef6\x652f\x6301
43\Command="
    // \x4e0d\x652f\x6301\x526a\x5207\x64cd\x4f5c
    var originalFunction = global.clipboardFormatsToSave
    global.clipboardFormatsToSave = function() {
        return originalFunction().concat([
            mimeUriList,
            'x-special/gnome-copied-files',
            'application/x-kde-cutselection',
        ])
    }"
43\IsScript=true
43\Icon=\xf0c1
44\Name=\x590d\x5236\x65f6\x56fe\x6807\x7ea2\x70b9\x63d0\x793a
44\Command="
    var timeMs = 10000;
    var iconTags = [
        '\xf111',
        ' \xf111',
        '  \xf111',
        '',
    ]
    function clipboardNotification() {
        var id = Number(settings('icon-activation-id') || 0) + 1;
        settings('icon-activation-id', id);
        iconTagColor('red');
        for (const tag of iconTags.values()) {
            if ( settings('icon-activation-id') != id )
                break;
            iconTag(tag);
            sleep(timeMs);
        }
    }
    onClipboardChanged_ = onClipboardChanged
    onClipboardChanged = function() {
        onClipboardChanged_()
        clipboardNotification()
    }
    onOwnClipboardChanged_ = onOwnClipboardChanged
    onOwnClipboardChanged = function() {
        onOwnClipboardChanged_()
        clipboardNotification()
    }
    onHiddenClipboardChanged_ = onHiddenClipboardChanged
    onHiddenClipboardChanged = function() {
        onHiddenClipboardChanged_()
        clipboardNotification()
    }"
44\IsScript=true
44\Icon=\xf0c4
45\Name=\x5ffd\x7565\x7a7a\x5b57\x7b26\x6216\x5355\x4e2a\x5b57\x7b26\x7684\x6761\x76ee
45\Command="
    function hasEmptyOrSingleCharText() {
        if (dataFormats().includes(mimeText)) {
            var text = str(data(mimeText));
            if (text.match(/^\\s*.?\\s*$/)) {
                serverLog('Ignoring text with single or no character');
                return true;
            }
        }
        return false;
    }

    var onClipboardChanged_ = onClipboardChanged;
    onClipboardChanged = function() {
        if (!hasEmptyOrSingleCharText()) {
            onClipboardChanged_();
        }
    }

    var synchronizeFromSelection_ = synchronizeFromSelection;
    synchronizeFromSelection = function() {
        if (!hasEmptyOrSingleCharText()) {
            synchronizeFromSelection_();
        }
    }

    var synchronizeToSelection_ = synchronizeToSelection;
    synchronizeToSelection = function() {
        if (!hasEmptyOrSingleCharText()) {
            synchronizeToSelection_();
        }
    }
        "
45\IsScript=true
45\Icon=\xf06a
46\Name=\x542f\x52a8\x65f6\x663e\x793a\x4e3b\x7a97\x53e3
46\Command="
    var onStartPrevious = global.onStart
    global.onStart = function() {
        onStartPrevious()
        show()
    }"
46\IsScript=true
46\Enable=false
46\Icon=\xf2d0
47\Name=\x95f4\x9694\x33\x30\x79d2\x540e\x6e05\x7a7a\x7cfb\x7edf\x526a\x8d34\x677f
47\Command="
    var timeoutSeconds = 30;
    function option() {
        return isClipboard()
            ? 'clear_clipboard/clipboard_change_counter'
            : 'clear_clipboard/selection_change_counter'
    }
    function getCount() {
        return Number(settings(option())) || 0
    }
    function bumpCounter() {
        var counter = getCount() + 1
        settings(option(), counter)
        return counter
    }
    function resetLater(counter) {
        for (var i = 0; i < timeoutSeconds && counter == getCount(); ++i) {
            sleep(1000)
        }
        if (counter != getCount())
            return
        if (isClipboard())
            copy('')
        else
            copySelection('')
    }
    var onClipboardChanged_ = onClipboardChanged
    onClipboardChanged = function() {
        var counter = bumpCounter()
        onClipboardChanged_()
        resetLater(counter)
    }
    var onOwnClipboardChanged_ = onOwnClipboardChanged
    onOwnClipboardChanged = function() {
        var counter = bumpCounter()
        onOwnClipboardChanged_()
        resetLater(counter)
    }"
47\IsScript=true
47\Enable=false
47\Icon=\xf2f2
48\Name=\x9884\x89c8\x56fe\x7247\x6587\x4ef6
48\Command="
    copyq:
    var prefix_reg = /^file:\\/+(.*)/
    var suffixToMime = {
        'png': 'image/png',
        'jpg': 'image/jpeg',
        'jpeg': 'image/jpeg',
        'bmp': 'image/bmp',
        'gif': 'image/gif',
        'svg': 'image/svg+xml',
    }

    function tryShowImage(mime) {
        var path = str(data(mime))
        path = path.replace(prefix_reg, '$1')
        if (!path) 
            return false
        var i = path.lastIndexOf('.')
        if (i == -1)
            return false
        var suffix = path.substring(i + 1)
        var imageMime = suffixToMime[suffix]
        if (imageMime === undefined)
            return false
        var f = new File(path)
        if (!f.openReadOnly())
            return false
        var imageData = f.readAll()
        f.close()
        if (imageData.size() === 0)
            return false
        setData(mimeItemNotes, path)
        setData(imageMime, imageData)
        return true
    }

    if (!hasImage()) {
        tryShowImage(mimeText) || tryShowImage(mimeUriList)
    }

    function hasImage() {
        var formats = dataFormats()
        for (var i in formats) {
            if (formats[i].match(/^image\\//)) {
                return true
            }
        }
        return false
    }"
48\Display=true
48\Icon=\xf1c5
49\Name=\x7eaf\x6587\x672c\x989c\x8272\x6807\x8bb0
49\Command="
    copyq:
    if ( str(data(mimeText)) && !str(data(mimeHtml)) ) {
        html = escapeHtml(data(mimeText))
        setData(mimeHtml, '<span style=\"color:#4872B7\">' + html + '</span>')
    }"
49\Display=true
49\Icon=\xf15b
size=49