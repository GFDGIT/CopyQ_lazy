[Commands]
1\Name=\x64a4\x9500\x5220\x9664
1\MatchCommand="
    copyq:
    var trash_tab = '\x56de\x6536\x7ad9'
    if (selectedTab() == trash_tab) {
        menuItem['text'] = '\x6062\x590d\x9009\x4e2d\x6761\x76ee'
    } else {
        menuItem['text'] = '\x64a4\x9500\x4e0a\x4e00\x6b21\x5220\x9664'
    }"
1\Command="
    copyq:
    // \x5f53\x539f\x59cb\x6807\x7b7e\x9875\x4e0d\x5b58\x5728\x65f6\xff0c\x56de\x9000\x4f7f\x7528\x7684\x6807\x7b7e\x9875
    var fallback_tab = '\x526a\x8d34\x677f'

    // True\xff1a\x5c06\x6761\x76ee\x6062\x590d\x5230\x539f\x59cb\x4f4d\x7f6e
    // False\xff1a\x5c06\x6761\x76ee\x6062\x590d\x5230\x6807\x7b7e\x9875\x9876\x90e8
    // \x5728\x56de\x6536\x7ad9\x9009\x4e2d\x6761\x76ee\x8fdb\x884c\x6062\x590d\x65f6\xff0c\x6b64\x9879\x4e0d\x751f\x6548\xff0c\x603b\x662f\x6062\x590d\x5230\x9876\x90e8
    var restore_index = true

    var trash_tab = '\x56de\x6536\x7ad9'

    var tab_mime = 'application/x-copyq-user-tab'
    var index_mime = 'application/x-copyq-user-index'
    var time_mime = 'application/x-copyq-user-delete-time'
    var remove_mime = [tab_mime, index_mime, time_mime]

    tab(trash_tab)
    if (length() == 0) {
        popup('\x6ca1\x6709\x53ef\x64a4\x9500\x5220\x9664\x7684\x6761\x76ee\xff01')
        abort()
    }

    var target_index = 0
    var remove_items = []
    var select_items = []

    var trigger_tab = selectedTab()

    if (trigger_tab == trash_tab) {
        var tabs = []
        select_items = ItemSelection().current().items()
        remove_items = selectedItems()
        for (var i in select_items) {
            var item = select_items[i]

            var target_tab = item[tab_mime] || fallback_tab
            tabs.push(target_tab)
            for (var j in remove_mime)
                delete item[remove_mime[j]]
            tab(target_tab)
            insert(target_index, item)
        }
        var tabs_num = getRepeatNum(tabs)
        var tabs_str = ''
        for (var t in tabs_num) {
            tabs_str += t + '\xff1a' + tabs_num[t] + '\\n'
        }
        popup('\x5df2\x6062\x590d\x6761\x76ee(\x6807\x7b7e\x9875\xff1a\x6570\x91cf)\\n' + tabs_str, '', 3000)

    } else {
        var items = []

        tab(trash_tab)
        var item = getItem(0)
        var delete_time = item[time_mime]
        var target_tab = item[tab_mime] || selectedtab()
        for (let i = 0; i < length(); i++) {
            item = getitem(i)
            if (item[time_mime] == delete_time) {
                select_items.push(item[index_mime])
                for (var j in remove_mime)
                    delete item[remove_mime[j]]
                items.push(item)
                remove_items.push(i)
            }
        }

        show(target_tab)
        tab(target_tab)

        if (restore_index) {
            for (let i = 0; i < items.length; i++) {
                insert(select_items[i], items[i])
            }
        } else {
            select_items = []
            for (var j = 0; j < items.length; ++j) {
                select_items.push(target_index + j)
            }
            items.unshift(target_index)
            insert.apply(this, items)
        }

        selectItems.apply(this, select_items)

    }

    tab(trash_tab)
    remove.apply(this, remove_items)


    function getRepeatNum(arr) {
        var obj = {};
        for (var i = 0, l = arr.length; i < l; i++) {
            var item = arr[i];
            obj[item] = (obj[item] + 1) || 1;
        }
        return obj;
    }
    "
1\InMenu=true
1\Icon=\xf0e2
1\Shortcut=ctrl+z
2\Name=\x5220\x9664\x81f3\x56de\x6536\x7ad9
2\Command="
    copyq:
    var trash_tab = '\x56de\x6536\x7ad9'
    var tab_mime = 'application/x-copyq-user-tab'
    var index_mime = 'application/x-copyq-user-index'
    var time_mime = 'application/x-copyq-user-delete-time'

    var source_tab = selectedtab()
    var time = (new Date).toISOString()

    tab(source_tab)
    var sel = ItemSelection().current()
    var pinned = []
    const rows = sel.rows()
    if (rows.length === 0)
        abort()
    if (source_tab != trash_tab) {
        var trashed = []
        for (var i = 0; i < sel.length; ++i) {
            if (plugins.itempinned.isPinned(rows[i])) {
                pinned.push(i)
            }
            else {
                var item = sel.itemAtIndex(i)
                // Workaround: Convert QByteArray to ByteArray.
                for (var format in item)
                    item[format] = ByteArray(item[format])
                item[tab_mime] = source_tab
                item[index_mime] = rows[i]
                item[time_mime] = time
                trashed.push(item)
            }
        }
        if (pinned.length > 0) {
            sel.deselectIndexes(pinned)
            for (var i = 0; i < pinned.length; i++) {
              pinned[i] = pinned[i] + 1
            }
            popup('\x56fa\x5b9a\x7684\x6761\x76ee\x4e0d\x4f1a\x88ab\x5220\x9664  ', '\x9009\x62e9\x4e2d\x7684\x7b2c ' + pinned + ' \x6761\x5df2\x56fa\x5b9a\x3002', time = 2000)
        }
        tab(trash_tab)
        write(0, trashed)
        tab(source_tab)
        sel.removeAll()
    }
    else {
        var text = dialog(
            '.title', '\x786e\x8ba4\x5220\x9664\xff1f',
            '.label', '<font size=8>\x26a0\xfe0e</font><font size=4>&nbsp;\x65e0\x6cd5\x64a4\x9500\xff01',
            '.combo:\x786e\x8ba4 ', ['\x662f', '\x5426']
        )
        if (text == '\x662f') {
            sel.removeAll()
        }
    }

    var newCurrentRow = rows[0]
    if (newCurrentRow >= length())
        newCurrentRow = length() - 1
    selectItems(newCurrentRow)"
2\InMenu=true
2\Icon=\xf2ed
2\Shortcut=del
3\Name=\x6e05\x7406\x5f53\x524d\x6807\x7b7e\x9875
3\MatchCommand="
    copyq: tab(selectedTab()); if (size() == 0) fail()"
3\Command="
    copyq:
    var trash_tab = '\x56de\x6536\x7ad9'
    var tab_mime = 'application/x-copyq-user-tab'
    var index_mime = 'application/x-copyq-user-index'
    var time_mime = 'application/x-copyq-user-delete-time'

    var source_tab = selectedtab()
    var time = (new Date).toISOString()

    tab(source_tab)
    var sel = ItemSelection(selectedTab()).selectRemovable()
    var pinned = []
    const rows = sel.rows()
    if (rows.length === 0)
        abort()
    if (source_tab != trash_tab) {
        var trashed = []
        for (var i = 0; i < sel.length; ++i) {
            if (plugins.itempinned.isPinned(rows[i])) {
                pinned.push(i)
            }
            else {
                var item = sel.itemAtIndex(i)
                // Workaround: Convert QByteArray to ByteArray.
                for (var format in item)
                    item[format] = ByteArray(item[format])
                item[tab_mime] = source_tab
                item[index_mime] = rows[i]
                item[time_mime] = time
                trashed.push(item)
            }
        }
        if (pinned.length > 0) {
            sel.deselectIndexes(pinned)
            for (var i = 0; i < pinned.length; i++) {
              pinned[i] = pinned[i] + 1
            }
            popup('\x56fa\x5b9a\x7684\x6761\x76ee\x4e0d\x4f1a\x88ab\x5220\x9664  ', '\x7b2c ' + pinned + ' \x6761\x5df2\x56fa\x5b9a\x3002', time = 2000)
        }
        tab(trash_tab)
        write(0, trashed)
        tab(source_tab)
        sel.removeAll()
    }
    else {
        var text = dialog(
            '.title', '\x786e\x8ba4\x6e05\x7406\xff1f',
            '.label', '<font size=8>\x26a0\xfe0e</font><font size=4>&nbsp;\x65e0\x6cd5\x64a4\x9500\xff01',
            '.combo:\x786e\x8ba4 ', ['\x662f', '\x5426']
        )
        if (text == '\x662f') {
            ItemSelection(selectedTab()).selectRemovable().removeAll()
        }
    }

    var newCurrentRow = rows[0]
    if (newCurrentRow >= length())
        newCurrentRow = length() - 1
    selectItems(newCurrentRow)"
3\InMenu=true
3\Icon=\xf51a
size=3