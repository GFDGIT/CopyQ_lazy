[Command]
Name=复制命令时通知导入
Match=^\\[Commands?\\]|https?://github\\.com/.*/copyq-commands/blob/.*\\.ini
Command="
    copyq:
    // Imports raw commands code (starting with [Command] or [Commands])
    // or from a link ('https://github.com/**/copyq-commands/blob/**.ini').
    const timeOutSeconds = 10
    const rawDataUrlPrefix = 'https://raw.githubusercontent.com'

    // Don't run this when mouse selection changes.
    if ( dataFormats().indexOf(mimeClipboardMode) != -1 )
      abort()

    function importCommandsFromUrl(url)
    {
      let m = url.match(/^https?:\\/\\/github\\.com(\\/.*)\\/blob(\\/.*\\.ini)/)
      if (!m)
        return;

      let rawDataUrl = rawDataUrlPrefix + m[1] + m[2]
      let reply = networkGet(rawDataUrl)
      let commandsData = str(reply.data)
      if (reply.status != 200) {
        throw '获取命令失败！'
            + '\\nStatus code: ' + reply.status
            + '\\nError: ' + reply.error
      }
      if ( !commandsData.match(/^\\[Commands?\\]/) )
        return;

      return importCommands(commandsData);
    }

    const ini = dataFormats().includes(mimeTextUtf8) ? data(mimeTextUtf8) : input();
    const cmds = importCommandsFromUrl(str(ini)) || importCommands(ini)

    let list = ''
    for (const cmd of cmds) {
      let cmdType =
        cmd.automatic ? 'automatic' :
        cmd.inMenu ? 'menu/shortcut' :
        cmd.globalShortcuts ? 'global shortcut' : '<b>???</b>';
      list += cmd.name + ' (' + cmdType + ')\\n'
    }

    notification(
      '.title', '从剪贴板导入 CopyQ 命令？',
      '.message', list,
      '.time', timeOutSeconds * 1000,
      '.icon', '',
      '.id', 'CopyQ_commands_in_clipboard',
      '.button', '取消', '', '',
      '.button', '导入', 'copyq: add(input()); addCommands( importCommands(input()) )', exportCommands(cmds)
    )"
Input=text/plain
Automatic=true
Icon=