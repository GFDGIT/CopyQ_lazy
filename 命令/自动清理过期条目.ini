[Command]
Name=自动清除过期条目
Command="
    // Require commands：Store Copy Time、Move to Trash (Undoable)

    // Get clipboard, trash_tab names
    const clip_tab = config(\"clipboard_tab\");
    const trash_tab = settings(\"trash_tab\");

    let tabs_times = {};
    // Set the tabs to clean and the expiration time (in hours)
    // The default is 15 days for the clipboard and 30 days for the trash_tab
    tabs_times[trash_tab] = 30 * 24;   // Clean up the trash_tab first to make space
    tabs_times[clip_tab] = 15 * 24;

    // check items expiration on copyq start
    const onStart_ = global.onStart
    global.onStart = function () {
        onStart_()
        check_items_expire()
    }

    // check_items_expire can be called manually
    // and will ignore the interval
    global.check_items_expire = function (manual = false) {
        const time_mime = \"application/x-copyq-user-time\";
        const now = new Date();
        if (!manual) {
            const interval = Math.min(...Object.values(tabs_times)) / 10;
            const last_check_time = new Date(settings(\"last_check_time\"));
            if (hoursBetween(now, last_check_time) < interval) {
                return;
            }
        }
        settings(\"last_check_time\", str(now));
        for (let t in tabs_times) {
            const hours = tabs_times[t];
            let de_sel = [];
            let count = {};
            tab(t);
            let sel = ItemSelection().selectRemovable();
            let items = sel.items();
            for (let i=0; i < items.length; i++) {
                let item_time = items[i][time_mime];
                if (hoursBetween(now, new Date(item_time)) < hours) {
                    de_sel.push(i);
                }
            }
            sel = sel.deselectIndexes(de_sel);
            count[t] = sel.length;
            if (count[t]> 0) sel.removeAll();
        }
        return count;
    };
    // Calculate the time difference in hours
    function hoursBetween(now, then) {
        let hours = (now - then) / (1000 * 60 * 60);
        return Math.floor(hours);
    }"
IsScript=true
Icon=